// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using ResumeApp.Data;
using System;

namespace ResumeApp.Migrations
{
    [DbContext(typeof(JobContext))]
    [Migration("20190222033533_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ResumeApp.Models.Education", b =>
                {
                    b.Property<int>("educationID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("applicantID");

                    b.Property<int>("educationlevelId");

                    b.Property<DateTime>("enddate");

                    b.Property<string>("fieldofStudy");

                    b.Property<string>("schoolCity");

                    b.Property<string>("schoolName");

                    b.Property<string>("schoolState")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<DateTime>("startdate");

                    b.Property<int?>("submitterID");

                    b.HasKey("educationID");

                    b.HasIndex("submitterID");

                    b.ToTable("Education");
                });

            modelBuilder.Entity("ResumeApp.Models.JobDescription", b =>
                {
                    b.Property<int>("jobDescriptionId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("WorkExperienceworkID");

                    b.Property<string>("jobExperience")
                        .IsRequired();

                    b.HasKey("jobDescriptionId");

                    b.HasIndex("WorkExperienceworkID");

                    b.ToTable("JobDescription");
                });

            modelBuilder.Entity("ResumeApp.Models.ProfSummary", b =>
                {
                    b.Property<int>("profSummaryID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ProfSum");

                    b.Property<int>("applicantID");

                    b.Property<int?>("submitterID");

                    b.HasKey("profSummaryID");

                    b.HasIndex("submitterID");

                    b.ToTable("ProfSummary");
                });

            modelBuilder.Entity("ResumeApp.Models.Reference", b =>
                {
                    b.Property<int>("referenceID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("applicantID");

                    b.Property<DateTime>("firstMet");

                    b.Property<string>("referenceEmail");

                    b.Property<string>("referenceName");

                    b.Property<string>("referencePhone");

                    b.Property<int>("relationshipType");

                    b.Property<int?>("submitterID");

                    b.Property<int>("yrsKnown");

                    b.HasKey("referenceID");

                    b.HasIndex("submitterID");

                    b.ToTable("Reference");
                });

            modelBuilder.Entity("ResumeApp.Models.SkillSet", b =>
                {
                    b.Property<int>("skillsetID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("applicantID");

                    b.Property<string>("skillSetRecord");

                    b.Property<int>("skillsetType");

                    b.Property<int?>("submitterID");

                    b.HasKey("skillsetID");

                    b.HasIndex("submitterID");

                    b.ToTable("SkillSet");
                });

            modelBuilder.Entity("ResumeApp.Models.Submitter", b =>
                {
                    b.Property<int>("submitterID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("city")
                        .IsRequired();

                    b.Property<string>("firstName")
                        .IsRequired();

                    b.Property<string>("lastName")
                        .IsRequired();

                    b.Property<string>("midInitial")
                        .HasMaxLength(1);

                    b.Property<string>("state")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.HasKey("submitterID");

                    b.ToTable("Submitter");
                });

            modelBuilder.Entity("ResumeApp.Models.WorkExperience", b =>
                {
                    b.Property<int>("workID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("applicantID");

                    b.Property<string>("city")
                        .IsRequired();

                    b.Property<string>("employer")
                        .IsRequired();

                    b.Property<DateTime>("endDate");

                    b.Property<bool>("isStillEmployed");

                    b.Property<int>("jobDescriptionId");

                    b.Property<string>("jobTitle")
                        .IsRequired();

                    b.Property<DateTime>("startDate");

                    b.Property<string>("state")
                        .IsRequired();

                    b.Property<int?>("submitterID");

                    b.HasKey("workID");

                    b.HasIndex("submitterID");

                    b.ToTable("WorkExperience");
                });

            modelBuilder.Entity("ResumeApp.Models.Education", b =>
                {
                    b.HasOne("ResumeApp.Models.Submitter", "Submitter")
                        .WithMany("Educations")
                        .HasForeignKey("submitterID");
                });

            modelBuilder.Entity("ResumeApp.Models.JobDescription", b =>
                {
                    b.HasOne("ResumeApp.Models.WorkExperience", "WorkExperience")
                        .WithMany("jobDescriptions")
                        .HasForeignKey("WorkExperienceworkID");
                });

            modelBuilder.Entity("ResumeApp.Models.ProfSummary", b =>
                {
                    b.HasOne("ResumeApp.Models.Submitter", "Submitter")
                        .WithMany("ProfSummaries")
                        .HasForeignKey("submitterID");
                });

            modelBuilder.Entity("ResumeApp.Models.Reference", b =>
                {
                    b.HasOne("ResumeApp.Models.Submitter", "Submitter")
                        .WithMany("References")
                        .HasForeignKey("submitterID");
                });

            modelBuilder.Entity("ResumeApp.Models.SkillSet", b =>
                {
                    b.HasOne("ResumeApp.Models.Submitter", "Submitter")
                        .WithMany("SkillSets")
                        .HasForeignKey("submitterID");
                });

            modelBuilder.Entity("ResumeApp.Models.WorkExperience", b =>
                {
                    b.HasOne("ResumeApp.Models.Submitter", "Submitter")
                        .WithMany("WorkExperiences")
                        .HasForeignKey("submitterID");
                });
#pragma warning restore 612, 618
        }
    }
}
